/**
 * Universidad de La Laguna
 * 	ETSII 
 * 	Curso 3� de Ingieneria Inform�tica
 * 	Fecha: 4-03-2017
 * 	Clase que crea una venta en la que dibujamos el panel con la bola
 * y a�adimos los botones
 * @author: Alejandro Hern�ndez Padr�n
 *
 */

package bola_program;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.Time;
import java.util.Random;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;





public class BolaMovil extends JFrame{
	//Atributos

	private JButton buttonUp = new JButton("N");		//Bola roja buttons
	private JButton buttonLeft= new JButton("E");
	private JButton buttonRight = new JButton("O");
	private JButton buttonDown = new JButton("S");
	private JButton buttonNE = new JButton("NE");		//Bola roja buttons
	private JButton buttonNO= new JButton("NO");
	private JButton buttonSE = new JButton("SE");
	private JButton buttonSO = new JButton("SO");
	

	private JButton buttonUpBlue = new JButton("N");		//Bola roja buttons
	private JButton buttonLeftBlue = new JButton("E");
	private JButton buttonRightBlue = new JButton("O");
	private JButton buttonDownBlue = new JButton("S");
	private JButton buttonNEBlue = new JButton("NE");		//Bola roja buttons
	private JButton buttonNOBlue= new JButton("NO");
	private JButton buttonSEBlue = new JButton("SE");
	private JButton buttonSOBlue = new JButton("SO");

	private PanelDibujable panelBola;
	private Timer tm;//Panel que dibuja la bola

	public BolaMovil(String[] factor) {

		if (factor.length == 1){//Mientras se le pase un parametro
			
			//Construimos el panel con nuestro factor de desplazamiento
			setPanelBola(new PanelDibujable(Integer.parseInt(factor[0])));

			setLayout(new BorderLayout(0, 0));		//BorderLayout
			add(getPanelBola(), BorderLayout.CENTER);	//A�adimos nuestro frame con la bola
			
			JPanel grid = new JPanel(new GridLayout(1, 2, 5, 5));
			

			grid.add(setButtonPanelRed());//A�adimos las acciones a nuestros botones//Creamos el panel con los botones
			grid.add(setButtonPanelBlue());
			setActionsButtonsRed();
			setActionsButtonsBlue();
			add(grid, BorderLayout.SOUTH);	//Lo a�adimos a nuestro Frame
			tm = new Timer(500, new Randomize());
		    tm.start();
			
		}else{
			System.out.println("Para ejecutar correctamente este programa es necesario"
					+ " pasarle por linea de comandos un parametro de tipo int");
		}

		setTitle("BolaRoja");
		setLocationRelativeTo(null); // Center the frame
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setSize(800, 400);
		setVisible(true);

	}

	/**
	 * Metodo que crea y devuelve el Panel con nuestros botones
	 * @return 
	 */
	private JPanel setButtonPanelRed(){

		JPanel panelButtons = new JPanel(new GridLayout(4, 1, 5, 5)); //Panel que contiene los botones

		JPanel panelUp = new JPanel(new FlowLayout(FlowLayout.CENTER, 5, 0));
		panelUp.add(getButtonNE());
		panelUp.add(getButtonUp());
		panelUp.add(getButtonNO());
		
		JPanel panelLR = new JPanel(new FlowLayout(FlowLayout.CENTER, 5, 0));
		panelLR.add(getButtonLeft());
		panelLR.add(new JButton());
		panelLR.add(getButtonRight());

		JPanel panelDown = new JPanel(new FlowLayout(FlowLayout.CENTER, 5, 0));
		panelDown.add(getButtonSE());
		panelDown.add(getButtonDown());
		panelDown.add(getButtonSO());

		JPanel key = new KeyList();
		key.setFocusable(true);
		//A�adimos lso botones al panel
		panelButtons.add(panelUp);
		panelButtons.add(panelLR);
		panelButtons.add(panelDown);
		panelButtons.add(key);
		return panelButtons;
	}
	
	
	private JPanel setButtonPanelBlue(){

		JPanel panelButtons = new JPanel(new GridLayout(4, 1, 5, 5)); //Panel que contiene los botones

		JPanel panelUp = new JPanel(new FlowLayout(FlowLayout.CENTER, 5, 0));
		panelUp.add(getButtonNEBlue());
		panelUp.add(getButtonUpBlue());
		panelUp.add(getButtonNOBlue());

		JPanel panelLR = new JPanel(new FlowLayout(FlowLayout.CENTER, 5, 0));
		panelLR.add(getButtonLeftBlue());
		panelLR.add(new JButton());
		panelLR.add(getButtonRightBlue());

		JPanel panelDown = new JPanel(new FlowLayout(FlowLayout.CENTER, 5, 0));
		panelDown.add(getButtonSEBlue());
		panelDown.add(getButtonDownBlue());
		panelDown.add(getButtonSOBlue());
		

		panelButtons.add(panelUp);
		panelButtons.add(panelLR);
		panelButtons.add(panelDown);

		return panelButtons;
	}

	/**
	 * Metodo que a�ade las acciones a nuestros botones
	 */
	private void setActionsButtonsRed(){

		ButtonsListenerRed buttonListener = new ButtonsListenerRed();
		getButtonUp().addActionListener(buttonListener);
		getButtonLeft().addActionListener(buttonListener);
		getButtonRight().addActionListener(buttonListener);
		getButtonDown().addActionListener(buttonListener);
		getButtonNE().addActionListener(buttonListener);
		getButtonNO().addActionListener(buttonListener);
		getButtonSE().addActionListener(buttonListener);
		getButtonSO().addActionListener(buttonListener);
	}
	/**
	 * Metodo que a�ade las acciones a nuestros botones
	 */
	private void setActionsButtonsBlue(){

		ButtonsListenerBlue buttonListener = new ButtonsListenerBlue();
		getButtonUpBlue().addActionListener(buttonListener);
		getButtonLeftBlue().addActionListener(buttonListener);
		getButtonRightBlue().addActionListener(buttonListener);
		getButtonDownBlue().addActionListener(buttonListener);
		getButtonNEBlue().addActionListener(buttonListener);
		getButtonNOBlue().addActionListener(buttonListener);
		getButtonSEBlue().addActionListener(buttonListener);
		getButtonSOBlue().addActionListener(buttonListener);
	}


	/**
	 * Clase que implementa ActionListener con las acciones a ejecutar de cada uno
	 * de los botonoes
	 * @author koala
	 *
	 */
	class ButtonsListenerRed implements ActionListener {
		public void actionPerformed(ActionEvent e) {
		
			if (e.getSource() == getButtonUp()){   	
				getPanelBola().getBolaRoja().moveUp();;
				getPanelBola().repaint();
			}else if(e.getSource() == getButtonLeft()){
				getPanelBola().getBolaRoja().moveLeft();
				getPanelBola().repaint();
			}else if(e.getSource() == getButtonRight()){
				getPanelBola().getBolaRoja().moveRight();
				getPanelBola().repaint();
			}else if(e.getSource() == getButtonDown()){
				getPanelBola().getBolaRoja().moveDown();
				getPanelBola().repaint();
			}else if(e.getSource() == getButtonNE()){
				getPanelBola().getBolaRoja().moveNE();
				getPanelBola().repaint();
			}else if(e.getSource() == getButtonNO()){
				getPanelBola().getBolaRoja().moveNO();
				getPanelBola().repaint();
			}else if(e.getSource() == getButtonSE()){
				getPanelBola().getBolaRoja().moveSE();
				getPanelBola().repaint();
			}else if(e.getSource() == getButtonSO()){
				getPanelBola().getBolaRoja().moveSO();
				getPanelBola().repaint();
			}
			


		}
	}
	
	class ButtonsListenerBlue implements ActionListener {
		public void actionPerformed(ActionEvent e) {
		
			if (e.getSource() == getButtonUpBlue()){   	
				
				getPanelBola().getBolaAzul().moveUp();;
				getPanelBola().repaint();
			}else if(e.getSource() == getButtonLeftBlue()){
				getPanelBola().getBolaAzul().moveLeft();
				getPanelBola().repaint();
			}else if(e.getSource() == getButtonRightBlue()){
				getPanelBola().getBolaAzul().moveRight();
				getPanelBola().repaint();
			}else if(e.getSource() == getButtonDownBlue()){
				getPanelBola().getBolaAzul().moveDown();
				getPanelBola().repaint();
			}else if(e.getSource() == getButtonNEBlue()){
				getPanelBola().getBolaAzul().moveNE();
				getPanelBola().repaint();
			}else if(e.getSource() == getButtonNOBlue()){
				getPanelBola().getBolaAzul().moveNO();
				getPanelBola().repaint();
			}else if(e.getSource() == getButtonSEBlue()){
				getPanelBola().getBolaAzul().moveSE();
				getPanelBola().repaint();
			}else if(e.getSource() == getButtonSOBlue()){
				getPanelBola().getBolaAzul().moveSO();
				getPanelBola().repaint();
			}

		}
	}
	class Randomize implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			Random rn = new Random();
			int i = rn.nextInt()%8;
			switch(i){
			case 0: getPanelBola().getBolaAzul().moveNO();
			getPanelBola().getBolaRoja().moveNO();
			break;
			case 1: getPanelBola().getBolaAzul().moveNE();
			getPanelBola().getBolaRoja().moveNO();break;
			case 2: getPanelBola().getBolaAzul().moveUp();
			getPanelBola().getBolaRoja().moveNO();break;
			case 3: getPanelBola().getBolaAzul().moveLeft();
			getPanelBola().getBolaRoja().moveNO();break;
			case 4: getPanelBola().getBolaAzul().moveRight();
			getPanelBola().getBolaRoja().moveNO();break;
			case 5: getPanelBola().getBolaAzul().moveSO();
			getPanelBola().getBolaRoja().moveNO();break;
			case 6: getPanelBola().getBolaAzul().moveSE();
			getPanelBola().getBolaRoja().moveNO();break;
			case 7: getPanelBola().getBolaAzul().moveDown();
			getPanelBola().getBolaRoja().moveNO();break;
			default:;
			}
			getPanelBola().repaint();
			

		}
	}
	
	class KeyList extends JPanel implements KeyListener {

		public KeyList() {
			addKeyListener(this);
		}

		public void addNotify() {
			super.addNotify();
			requestFocus();
		}
		public void keyPressed(KeyEvent e) {
			switch (e.getKeyCode()) {
			case KeyEvent.VK_UP: getPanelBola().getBolaRoja().moveUp(); break;
			case KeyEvent.VK_LEFT: getPanelBola().getBolaRoja().moveLeft(); break;
			case KeyEvent.VK_RIGHT: getPanelBola().getBolaRoja().moveRight(); break;
			case KeyEvent.VK_DOWN: getPanelBola().getBolaRoja().moveDown(); break;
			default:;
			}
			switch (e.getKeyChar()) {
			case 'w': getPanelBola().getBolaAzul().moveUp(); break;
			case 'a': getPanelBola().getBolaAzul().moveLeft(); break;
			case 'd': getPanelBola().getBolaAzul().moveRight(); break;
			case 's': getPanelBola().getBolaAzul().moveDown(); break;
			default:;
			}
			getPanelBola().repaint();
		}
		public void keyReleased(KeyEvent e) { }
		public void keyTyped(KeyEvent e) {	}
	}
	


	
		/**
	 * @return the buttonUpBlue
	 */
	public JButton getButtonUpBlue() {
		return buttonUpBlue;
	}

	/**
	 * @param buttonUpBlue the buttonUpBlue to set
	 */
	public void setButtonUpBlue(JButton buttonUpBlue) {
		this.buttonUpBlue = buttonUpBlue;
	}

	/**
	 * @return the buttonLeftBlue
	 */
	public JButton getButtonLeftBlue() {
		return buttonLeftBlue;
	}

	/**
	 * @param buttonLeftBlue the buttonLeftBlue to set
	 */
	public void setButtonLeftBlue(JButton buttonLeftBlue) {
		this.buttonLeftBlue = buttonLeftBlue;
	}

	/**
	 * @return the buttonRightBlue
	 */
	public JButton getButtonRightBlue() {
		return buttonRightBlue;
	}

	/**
	 * @param buttonRightBlue the buttonRightBlue to set
	 */
	public void setButtonRightBlue(JButton buttonRightBlue) {
		this.buttonRightBlue = buttonRightBlue;
	}

	/**
	 * @return the buttonDownBlue
	 */
	public JButton getButtonDownBlue() {
		return buttonDownBlue;
	}

	/**
	 * @param buttonDownBlue the buttonDownBlue to set
	 */
	public void setButtonDownBlue(JButton buttonDownBlue) {
		this.buttonDownBlue = buttonDownBlue;
	}

		/**
		 * @return the buttonUp
		 */
		public JButton getButtonUp() {
			return buttonUp;
		}

		/**
		 * @param buttonUp the buttonUp to set
		 */
		public void setButtonUp(JButton buttonUp) {
			this.buttonUp = buttonUp;
		}

		/**
		 * @return the buttonLeft
		 */
		public JButton getButtonLeft() {
			return buttonLeft;
		}

		/**
		 * @param buttonLeft the buttonLeft to set
		 */
		public void setButtonLeft(JButton buttonLeft) {
			this.buttonLeft = buttonLeft;
		}

		/**
		 * @return the buttonRight
		 */
		public JButton getButtonRight() {
			return buttonRight;
		}

		/**
		 * @param buttonRight the buttonRight to set
		 */
		public void setButtonRight(JButton buttonRight) {
			this.buttonRight = buttonRight;
		}

		/**
		 * @return the buttonDown
		 */
		public JButton getButtonDown() {
			return buttonDown;
		}

		/**
		 * @param buttonDown the buttonDown to set
		 */
		public void setButtonDown(JButton buttonDown) {
			this.buttonDown = buttonDown;
		}

		/**
		 * @return the panelBola
		 */
		public PanelDibujable getPanelBola() {
			return panelBola;
		}

		/**
		 * @param panelBola the panelBola to set
		 */
		public void setPanelBola(PanelDibujable panelBola) {
			this.panelBola = panelBola;
		}

		/**
		 * @return the buttonNE
		 */
		public JButton getButtonNE() {
			return buttonNE;
		}

		/**
		 * @param buttonNE the buttonNE to set
		 */
		public void setButtonNE(JButton buttonNE) {
			this.buttonNE = buttonNE;
		}

		/**
		 * @return the buttonNO
		 */
		public JButton getButtonNO() {
			return buttonNO;
		}

		/**
		 * @param buttonNO the buttonNO to set
		 */
		public void setButtonNO(JButton buttonNO) {
			this.buttonNO = buttonNO;
		}

		/**
		 * @return the buttonSE
		 */
		public JButton getButtonSE() {
			return buttonSE;
		}

		/**
		 * @param buttonSE the buttonSE to set
		 */
		public void setButtonSE(JButton buttonSE) {
			this.buttonSE = buttonSE;
		}

		/**
		 * @return the buttonSO
		 */
		public JButton getButtonSO() {
			return buttonSO;
		}

		/**
		 * @param buttonSO the buttonSO to set
		 */
		public void setButtonSO(JButton buttonSO) {
			this.buttonSO = buttonSO;
		}

		/**
		 * @return the buttonNEBlue
		 */
		public JButton getButtonNEBlue() {
			return buttonNEBlue;
		}

		/**
		 * @param buttonNEBlue the buttonNEBlue to set
		 */
		public void setButtonNEBlue(JButton buttonNEBlue) {
			this.buttonNEBlue = buttonNEBlue;
		}

		/**
		 * @return the buttonNOBlue
		 */
		public JButton getButtonNOBlue() {
			return buttonNOBlue;
		}

		/**
		 * @param buttonNOBlue the buttonNOBlue to set
		 */
		public void setButtonNOBlue(JButton buttonNOBlue) {
			this.buttonNOBlue = buttonNOBlue;
		}

		/**
		 * @return the buttonSEBlue
		 */
		public JButton getButtonSEBlue() {
			return buttonSEBlue;
		}

		/**
		 * @param buttonSEBlue the buttonSEBlue to set
		 */
		public void setButtonSEBlue(JButton buttonSEBlue) {
			this.buttonSEBlue = buttonSEBlue;
		}

		/**
		 * @return the buttonSOBlue
		 */
		public JButton getButtonSOBlue() {
			return buttonSOBlue;
		}

		/**
		 * @param buttonSOBlue the buttonSOBlue to set
		 */
		public void setButtonSOBlue(JButton buttonSOBlue) {
			this.buttonSOBlue = buttonSOBlue;
		}


	}

